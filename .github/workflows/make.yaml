name: Builds / Tests / Benchmarks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

###############################################################################
#
#                     dynamically linked prebuilt libtorch
#
###############################################################################

  platform-macos_libtorch-prebuilt_ops-dev:

    runs-on: macos-latest
    env:
      NAME: platform-macos.libtorch-prebuilt.ops-dev
      LIBTORCH: prebuilt
      OP_SELECTION_YAML: tools/dev.yaml

    steps:
    - uses: actions/checkout@v2

    - name: checkout submodules
      run: git submodule update --init --recursive micropython pytorch

    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - uses: ./.github/actions/setup_libtorch_build_env

    - name: make & test
      run: make test

    - uses: ./.github/actions/check_binary_size

    - name: upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.NAME }}
        path: build/upytorch.strip

    - name: upload bloaty
      uses: actions/upload-artifact@v2
      with:
        name: bloaty-${{ env.NAME }}
        path: bloaty_result
        if-no-files-found: ignore

  platform-ubuntu_libtorch-prebuilt_ops-dev:

    runs-on: ubuntu-latest
    env:
      NAME: platform-ubuntu.libtorch-prebuilt.ops-dev
      LIBTORCH: prebuilt
      OP_SELECTION_YAML: tools/dev.yaml

    steps:
    - uses: actions/checkout@v2

    - name: checkout submodules
      run: git submodule update --init --recursive micropython pytorch

    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - uses: ./.github/actions/setup_libtorch_build_env

    - name: install prebuilt pytorch
      run: |
        pip install torch==1.7.1+cpu torchvision==0.8.2+cpu torchaudio==0.7.2 -f https://download.pytorch.org/whl/torch_stable.html

    - name: make & test
      run: make test

    - uses: ./.github/actions/check_binary_size

    - name: check python3 perf (dynamically linked with the prebuilt libtorch)
      uses: ./.github/actions/check_perf
      with:
        name: py3.prebuilt
        binary: python3

    - name: check micropython perf (dynamically linked with the prebuilt libtorch)
      uses: ./.github/actions/check_perf
      with:
        name: upy.prebuilt

    - name: upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.NAME }}
        path: build/upytorch.strip

    - name: upload bloaty
      uses: actions/upload-artifact@v2
      with:
        name: bloaty-${{ env.NAME }}
        path: bloaty_result
        if-no-files-found: ignore

###############################################################################
#
#                     statically linked lite-libtorch
#
###############################################################################

  platform-macos_libtorch-lite_ops-noop:

    runs-on: macos-latest
    env:
      NAME: platform-macos.libtorch-lite.ops-noop
      LIBTORCH: local_lite
      OP_SELECTION_YAML: tools/noop.yaml

    steps:
    - uses: actions/checkout@v2

    - name: checkout submodules
      run: git submodule update --init --recursive micropython pytorch

    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - uses: ./.github/actions/setup_libtorch_build_env

    - name: make
      run: make

    - uses: ./.github/actions/check_binary_size

    - name: upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.NAME }}
        path: build/upytorch.strip

    - name: upload bloaty
      uses: actions/upload-artifact@v2
      with:
        name: bloaty-${{ env.NAME }}
        path: bloaty_result
        if-no-files-found: ignore

  platform-ubuntu_libtorch-lite_ops-noop:

    runs-on: ubuntu-latest
    env:
      NAME: platform-ubuntu.libtorch-lite.ops-noop
      LIBTORCH: local_lite
      OP_SELECTION_YAML: tools/noop.yaml

    steps:
    - uses: actions/checkout@v2

    - name: checkout submodules
      run: git submodule update --init --recursive micropython pytorch

    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - uses: ./.github/actions/setup_libtorch_build_env

    - name: make
      run: make

    - uses: ./.github/actions/check_binary_size

    - name: upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.NAME }}
        path: build/upytorch.strip

    - name: upload bloaty
      uses: actions/upload-artifact@v2
      with:
        name: bloaty-${{ env.NAME }}
        path: bloaty_result
        if-no-files-found: ignore

  platform-macos_libtorch-lite_ops-alexnet:

    runs-on: macos-latest
    env:
      NAME: platform-macos.libtorch-lite.ops-alexnet
      LIBTORCH: local_lite
      OP_SELECTION_YAML: tools/alexnet.yaml

    steps:
    - uses: actions/checkout@v2

    - name: checkout submodules
      run: git submodule update --init --recursive micropython pytorch

    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - uses: ./.github/actions/setup_libtorch_build_env

    - name: make
      run: make

    - name: run AlexNet
      run: |
        export ROOT=`pwd`
        export MICROPYPATH=$ROOT
        export UPY=$ROOT/build/upytorch

        cd benchmark
        $UPY -c 'import alexnet; alexnet.alexnet()(1)'

    - uses: ./.github/actions/check_binary_size

    - name: upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.NAME }}
        path: build/upytorch.strip

    - name: upload bloaty
      uses: actions/upload-artifact@v2
      with:
        name: bloaty-${{ env.NAME }}
        path: bloaty_result
        if-no-files-found: ignore

  platform-ubuntu_libtorch-lite_ops-alexnet:

    runs-on: ubuntu-latest
    env:
      NAME: platform-ubuntu.libtorch-lite.ops-alexnet
      LIBTORCH: local_lite
      OP_SELECTION_YAML: tools/alexnet.yaml

    steps:
    - uses: actions/checkout@v2

    - name: checkout submodules
      run: git submodule update --init --recursive micropython pytorch

    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - uses: ./.github/actions/setup_libtorch_build_env

    - name: make
      run: make

    - name: run AlexNet
      run: |
        export ROOT=`pwd`
        export MICROPYPATH=$ROOT
        export UPY=$ROOT/build/upytorch

        cd benchmark
        $UPY -c 'import alexnet; alexnet.alexnet()(1)'

    - uses: ./.github/actions/check_binary_size

    - name: upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.NAME }}
        path: build/upytorch.strip

    - name: upload bloaty
      uses: actions/upload-artifact@v2
      with:
        name: bloaty-${{ env.NAME }}
        path: bloaty_result
        if-no-files-found: ignore

  platform-macos_libtorch-lite_ops-dev:

    runs-on: macos-latest
    env:
      NAME: platform-macos.libtorch-lite.ops-dev
      LIBTORCH: local_lite
      OP_SELECTION_YAML: tools/dev.yaml

    steps:
    - uses: actions/checkout@v2

    - name: checkout submodules
      run: git submodule update --init --recursive micropython pytorch

    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - uses: ./.github/actions/setup_libtorch_build_env

    - name: make
      run: make

    - uses: ./.github/actions/check_binary_size

    - name: upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.NAME }}
        path: build/upytorch.strip

    - name: upload bloaty
      uses: actions/upload-artifact@v2
      with:
        name: bloaty-${{ env.NAME }}
        path: bloaty_result
        if-no-files-found: ignore

  platform-ubuntu_libtorch-lite_ops-dev:

    runs-on: ubuntu-latest
    env:
      NAME: platform-ubuntu.libtorch-lite.ops-dev
      LIBTORCH: local_lite
      OP_SELECTION_YAML: tools/dev.yaml

    steps:
    - uses: actions/checkout@v2

    - name: checkout submodules
      run: git submodule update --init --recursive micropython pytorch

    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - uses: ./.github/actions/setup_libtorch_build_env

    - name: make
      run: make

    - uses: ./.github/actions/check_binary_size

    - name: check micropython perf (statically linked with the locally built lite-libtorch)
      uses: ./.github/actions/check_perf
      with:
        name: upy.lite.dev

    - name: upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.NAME }}
        path: build/upytorch.strip

    - name: upload bloaty
      uses: actions/upload-artifact@v2
      with:
        name: bloaty-${{ env.NAME }}
        path: bloaty_result
        if-no-files-found: ignore
